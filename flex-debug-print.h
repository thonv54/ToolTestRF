// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__
#define __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__




// This file contains the generated macros for the debug printing
// Global macro, if this is commented out, there is no printing
// #define EMBER_AF_PRINT_ENABLE



// Generated bit array and name array that is used by thedebug printing library.
#define EMBER_AF_PRINT_CORE 0x0001
#define EMBER_AF_PRINT_APP 0x0002
#define EMBER_AF_PRINT_BITS { 0x03 }
#define EMBER_AF_PRINT_NAMES { \
  "Core",\
  "Application",\
  NULL\
}
#define EMBER_AF_PRINT_NAME_NUMBER 2


// Generated functions for use within plugin Buffer pool memory manager
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER)
#define emberAfPluginBufferPoolMemoryManagerPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER, __VA_ARGS__)
#define emberAfPluginBufferPoolMemoryManagerPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginBufferPoolMemoryManagerFlush()
#define emberAfPluginBufferPoolMemoryManagerDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER) ) { x; }
#define emberAfPluginBufferPoolMemoryManagerPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER, (buffer), (len), (withSpace))
#define emberAfPluginBufferPoolMemoryManagerPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER, (buffer))
#else
#define emberAfPluginBufferPoolMemoryManagerPrint(...)
#define emberAfPluginBufferPoolMemoryManagerPrintln(...)
#define emberAfPluginBufferPoolMemoryManagerFlush()
#define emberAfPluginBufferPoolMemoryManagerDebugExec(x)
#define emberAfPluginBufferPoolMemoryManagerPrintBuffer(buffer, len, withSpace)
#define emberAfPluginBufferPoolMemoryManagerPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_BUFFER_POOL_MEMORY_MANAGER)


// Generated functions for use within plugin Circular queue
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE)
#define emberAfPluginCircularQueuePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE, __VA_ARGS__)
#define emberAfPluginCircularQueuePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCircularQueueFlush()
#define emberAfPluginCircularQueueDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE) ) { x; }
#define emberAfPluginCircularQueuePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE, (buffer), (len), (withSpace))
#define emberAfPluginCircularQueuePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE, (buffer))
#else
#define emberAfPluginCircularQueuePrint(...)
#define emberAfPluginCircularQueuePrintln(...)
#define emberAfPluginCircularQueueFlush()
#define emberAfPluginCircularQueueDebugExec(x)
#define emberAfPluginCircularQueuePrintBuffer(buffer, len, withSpace)
#define emberAfPluginCircularQueuePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_CIRCULAR_QUEUE)


// Generated functions for use within plugin Command Interpreter for RAIL
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL)
#define emberAfPluginCommandInterpreterRailPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL, __VA_ARGS__)
#define emberAfPluginCommandInterpreterRailPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginCommandInterpreterRailFlush()
#define emberAfPluginCommandInterpreterRailDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL) ) { x; }
#define emberAfPluginCommandInterpreterRailPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL, (buffer), (len), (withSpace))
#define emberAfPluginCommandInterpreterRailPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL, (buffer))
#else
#define emberAfPluginCommandInterpreterRailPrint(...)
#define emberAfPluginCommandInterpreterRailPrintln(...)
#define emberAfPluginCommandInterpreterRailFlush()
#define emberAfPluginCommandInterpreterRailDebugExec(x)
#define emberAfPluginCommandInterpreterRailPrintBuffer(buffer, len, withSpace)
#define emberAfPluginCommandInterpreterRailPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_COMMAND_INTERPRETER_RAIL)


// Generated functions for use within plugin HAL library for RAIL
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_EFR32)
#define emberAfPluginHalEfr32Print(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_HAL_EFR32, __VA_ARGS__)
#define emberAfPluginHalEfr32Println(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_HAL_EFR32,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginHalEfr32Flush()
#define emberAfPluginHalEfr32DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_HAL_EFR32) ) { x; }
#define emberAfPluginHalEfr32PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_HAL_EFR32, (buffer), (len), (withSpace))
#define emberAfPluginHalEfr32PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_HAL_EFR32, (buffer))
#else
#define emberAfPluginHalEfr32Print(...)
#define emberAfPluginHalEfr32Println(...)
#define emberAfPluginHalEfr32Flush()
#define emberAfPluginHalEfr32DebugExec(x)
#define emberAfPluginHalEfr32PrintBuffer(buffer, len, withSpace)
#define emberAfPluginHalEfr32PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_HAL_EFR32)


// Generated functions for use within plugin Application Graphics for RAIL
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS)
#define emberAfPluginLcdGraphicsPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS, __VA_ARGS__)
#define emberAfPluginLcdGraphicsPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginLcdGraphicsFlush()
#define emberAfPluginLcdGraphicsDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS) ) { x; }
#define emberAfPluginLcdGraphicsPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS, (buffer), (len), (withSpace))
#define emberAfPluginLcdGraphicsPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS, (buffer))
#else
#define emberAfPluginLcdGraphicsPrint(...)
#define emberAfPluginLcdGraphicsPrintln(...)
#define emberAfPluginLcdGraphicsFlush()
#define emberAfPluginLcdGraphicsDebugExec(x)
#define emberAfPluginLcdGraphicsPrintBuffer(buffer, len, withSpace)
#define emberAfPluginLcdGraphicsPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_LCD_GRAPHICS)


// Generated functions for use within plugin RAIL Library
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAIL_LIB)
#define emberAfPluginRailLibPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_RAIL_LIB, __VA_ARGS__)
#define emberAfPluginRailLibPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_RAIL_LIB,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginRailLibFlush()
#define emberAfPluginRailLibDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_RAIL_LIB) ) { x; }
#define emberAfPluginRailLibPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_RAIL_LIB, (buffer), (len), (withSpace))
#define emberAfPluginRailLibPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_RAIL_LIB, (buffer))
#else
#define emberAfPluginRailLibPrint(...)
#define emberAfPluginRailLibPrintln(...)
#define emberAfPluginRailLibFlush()
#define emberAfPluginRailLibDebugExec(x)
#define emberAfPluginRailLibPrintBuffer(buffer, len, withSpace)
#define emberAfPluginRailLibPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAIL_LIB)


// Generated functions for use within plugin railtest Application
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE)
#define emberAfPluginRailtestBasePrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE, __VA_ARGS__)
#define emberAfPluginRailtestBasePrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginRailtestBaseFlush()
#define emberAfPluginRailtestBaseDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE) ) { x; }
#define emberAfPluginRailtestBasePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE, (buffer), (len), (withSpace))
#define emberAfPluginRailtestBasePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE, (buffer))
#else
#define emberAfPluginRailtestBasePrint(...)
#define emberAfPluginRailtestBasePrintln(...)
#define emberAfPluginRailtestBaseFlush()
#define emberAfPluginRailtestBaseDebugExec(x)
#define emberAfPluginRailtestBasePrintBuffer(buffer, len, withSpace)
#define emberAfPluginRailtestBasePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RAILTEST_BASE)


// Generated functions for use within plugin Response Printf
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF)
#define emberAfPluginResponsePrintfPrint(...) emberAfPrint(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF, __VA_ARGS__)
#define emberAfPluginResponsePrintfPrintln(...) emberAfPrintln(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfPluginResponsePrintfFlush()
#define emberAfPluginResponsePrintfDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF) ) { x; }
#define emberAfPluginResponsePrintfPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF, (buffer), (len), (withSpace))
#define emberAfPluginResponsePrintfPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF, (buffer))
#else
#define emberAfPluginResponsePrintfPrint(...)
#define emberAfPluginResponsePrintfPrintln(...)
#define emberAfPluginResponsePrintfFlush()
#define emberAfPluginResponsePrintfDebugExec(x)
#define emberAfPluginResponsePrintfPrintBuffer(buffer, len, withSpace)
#define emberAfPluginResponsePrintfPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_PLUGIN_RESPONSE_PRINTF)


// Generated functions for use within area Core
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)
#define emberAfCorePrint(...) emberAfPrint(EMBER_AF_PRINT_CORE, __VA_ARGS__)
#define emberAfCorePrintln(...) emberAfPrintln(EMBER_AF_PRINT_CORE,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CORE) ) { x; }
#define emberAfCorePrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CORE, (buffer), (len), (withSpace))
#define emberAfCorePrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CORE, (buffer))
#else
#define emberAfCorePrint(...)
#define emberAfCorePrintln(...)
#define emberAfCoreFlush()
#define emberAfCoreDebugExec(x)
#define emberAfCorePrintBuffer(buffer, len, withSpace)
#define emberAfCorePrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CORE)


// Generated functions for use within area Debug
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)
#define emberAfDebugPrint(...) emberAfPrint(EMBER_AF_PRINT_DEBUG, __VA_ARGS__)
#define emberAfDebugPrintln(...) emberAfPrintln(EMBER_AF_PRINT_DEBUG,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_DEBUG) ) { x; }
#define emberAfDebugPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_DEBUG, (buffer), (len), (withSpace))
#define emberAfDebugPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_DEBUG, (buffer))
#else
#define emberAfDebugPrint(...)
#define emberAfDebugPrintln(...)
#define emberAfDebugFlush()
#define emberAfDebugDebugExec(x)
#define emberAfDebugPrintBuffer(buffer, len, withSpace)
#define emberAfDebugPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_DEBUG)


// Generated functions for use within area Application
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
#define emberAfAppPrint(...) emberAfPrint(EMBER_AF_PRINT_APP, __VA_ARGS__)
#define emberAfAppPrintln(...) emberAfPrintln(EMBER_AF_PRINT_APP,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfAppFlush()
#define emberAfAppDebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_APP) ) { x; }
#define emberAfAppPrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_APP, (buffer), (len), (withSpace))
#define emberAfAppPrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_APP, (buffer))
#else
#define emberAfAppPrint(...)
#define emberAfAppPrintln(...)
#define emberAfAppFlush()
#define emberAfAppDebugExec(x)
#define emberAfAppPrintBuffer(buffer, len, withSpace)
#define emberAfAppPrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)


// Generated functions for use within area Custom messages (1)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)
#define emberAfCustom1Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM1, __VA_ARGS__)
#define emberAfCustom1Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM1,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM1) ) { x; }
#define emberAfCustom1PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM1, (buffer), (len), (withSpace))
#define emberAfCustom1PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM1, (buffer))
#else
#define emberAfCustom1Print(...)
#define emberAfCustom1Println(...)
#define emberAfCustom1Flush()
#define emberAfCustom1DebugExec(x)
#define emberAfCustom1PrintBuffer(buffer, len, withSpace)
#define emberAfCustom1PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM1)


// Generated functions for use within area Custom messages (2)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)
#define emberAfCustom2Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM2, __VA_ARGS__)
#define emberAfCustom2Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM2,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM2) ) { x; }
#define emberAfCustom2PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM2, (buffer), (len), (withSpace))
#define emberAfCustom2PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM2, (buffer))
#else
#define emberAfCustom2Print(...)
#define emberAfCustom2Println(...)
#define emberAfCustom2Flush()
#define emberAfCustom2DebugExec(x)
#define emberAfCustom2PrintBuffer(buffer, len, withSpace)
#define emberAfCustom2PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM2)


// Generated functions for use within area Custom messages (3)
#if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)
#define emberAfCustom3Print(...) emberAfPrint(EMBER_AF_PRINT_CUSTOM3, __VA_ARGS__)
#define emberAfCustom3Println(...) emberAfPrintln(EMBER_AF_PRINT_CUSTOM3,  __VA_ARGS__)
// Blocking IO is enabled for all serial ports, therefore flush calls are unnecessary.
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x) if ( emberAfPrintEnabled(EMBER_AF_PRINT_CUSTOM3) ) { x; }
#define emberAfCustom3PrintBuffer(buffer, len, withSpace) emberAfPrintBuffer(EMBER_AF_PRINT_CUSTOM3, (buffer), (len), (withSpace))
#define emberAfCustom3PrintString(buffer) emberAfPrintString(EMBER_AF_PRINT_CUSTOM3, (buffer))
#else
#define emberAfCustom3Print(...)
#define emberAfCustom3Println(...)
#define emberAfCustom3Flush()
#define emberAfCustom3DebugExec(x)
#define emberAfCustom3PrintBuffer(buffer, len, withSpace)
#define emberAfCustom3PrintString(buffer)
#endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_CUSTOM3)


#endif // __EMBER_AF_DEBUG_PRINTING_CONFIGURATION__
